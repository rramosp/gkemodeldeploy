apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    recommender.ai.gke.io/generated: "true"
    recommender.ai.gke.io/inference-server: vllm
  creationTimestamp: null
  labels:
    app: llama3-8b-vllm-inference-server
    recommender.ai.gke.io/generated: "true"
    recommender.ai.gke.io/inference-server: vllm
  name: llm-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llm-server
  strategy: {}
  template:
    metadata:
      annotations:
        recommender.ai.gke.io/generated: "true"
        recommender.ai.gke.io/inference-server: vllm
      creationTimestamp: null
      labels:
        ai.gke.io/inference-server: vllm
        ai.gke.io/model: LLaMA3_8B
        app: llm-server
        examples.ai.gke.io/source: blueprints
        recommender.ai.gke.io/generated: "true"
        recommender.ai.gke.io/inference-server: vllm
    spec:
      containers:
      - args:
        - --model=$(MODEL_ID)
        command:
        - python3
        - -m
        - vllm.entrypoints.openai.api_server
        env:
        - name: MODEL_ID
          value: meta-llama/Meta-Llama-3-8B
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              key: hf_api_token
              name: hf-secret
        image: vllm/vllm-openai:v0.7.2
        name: inference-server
        ports:
        - containerPort: 8000
          name: metrics
        readinessProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: 8000
          periodSeconds: 10
        resources:
          limits:
            nvidia.com/gpu: "1"
          requests:
            nvidia.com/gpu: "1"
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-l4
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm
